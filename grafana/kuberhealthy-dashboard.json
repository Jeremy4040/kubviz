{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 41,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "vertamedia-clickhouse-datasource",
        "uid": "vertamedia-clickhouse-datasource"
      },
      "gridPos": {
        "h": 13,
        "w": 18,
        "x": 0,
        "y": 0
      },
      "id": 14,
      "options": {
        "baidu": {
          "callback": "bmapReady",
          "key": ""
        },
        "editor": {
          "format": "auto",
          "height": 600
        },
        "editorMode": "code",
        "gaode": {
          "key": "",
          "plugin": "AMap.Scale,AMap.ToolBar"
        },
        "getOption": "let option; // Initialize the option variable\n\nif (typeof context.panel.data === 'undefined' || !context.panel.data.series || !context.panel.data.series[0] || !context.panel.data.series[0].fields) {\n  // Data is not available or doesn't have the expected structure\n  option = {\n    title: {\n      text: 'Data not available',\n      textStyle: {\n        fontSize: 24,\n        fontWeight: 'bold',\n      },\n      left: 'center',\n      top: 'middle',\n    },\n  };\n} else {\n  // Extract data from your JSON as before\n  const namespaces = context.panel.data.series[0].fields[0].values;\n  const counts = context.panel.data.series[0].fields[1].values;\n\n  // Create a hierarchical structure from the data with a default cluster node\n  const hierarchy = {\n    name: 'CheckName', // Default cluster node\n    children: [],\n  };\n\n  // Create an object to store namespaces and their counts\n  const namespaceCounts = {};\n\n  // Populate the namespaceCounts object with namespaces and counts\n  for (let i = 0; i < namespaces.length; i++) {\n    const namespace = namespaces[i];\n    const count = counts[i];\n\n    if (!namespaceCounts[namespace]) {\n      namespaceCounts[namespace] = count;\n    } else {\n      namespaceCounts[namespace] += count;\n    }\n  }\n\n  // Create nodes for each namespace and add them as children of the default cluster node\n  for (const namespace in namespaceCounts) {\n    hierarchy.children.push({\n      name: namespace,\n      children: [{ name: `${namespaceCounts[namespace]}` }],\n    });\n  }\n\n  // Create the tree chart using ECharts\n  option = {\n    tooltip: {\n      trigger: 'item',\n      triggerOn: 'mousemove',\n      formatter: function (params) {\n        const node = params.data;\n        let tooltip = '';\n        if (node.column) {\n          tooltip += `${node.column}: ${node.name}`;\n        } else {\n          tooltip += node.name;\n        }\n        return tooltip;\n      },\n    },\n    series: [\n      {\n        type: 'tree',\n        data: [hierarchy], // Use the hierarchy object as the data\n        top: '1%',\n        left: '7%',\n        bottom: '1%',\n        right: '20%',\n        symbolSize: 7,\n        label: {\n          position: 'left',\n          verticalAlign: 'middle',\n          align: 'centre',\n          fontSize: 15, // Increase the text size for regular nodes\n          fontWeight: 'bold', // Set the font weight to bold\n        },\n        leaves: {\n          label: {\n            position: 'right',\n            verticalAlign: 'middle',\n            align: 'left',\n            fontSize: 15, // Increase the text size for leaves\n            fontWeight: 'bold', // Set the font weight to bold\n          },\n        },\n        emphasis: {\n          focus: 'descendant',\n        },\n        expandAndCollapse: true,\n        animationDuration: 550,\n        animationDurationUpdate: 750,\n      },\n    ],\n  };\n}\n\nreturn option;\n",
        "google": {
          "callback": "gmapReady",
          "key": ""
        },
        "map": "none",
        "renderer": "canvas",
        "themeEditor": {
          "config": "{}",
          "height": 400,
          "name": "default"
        },
        "visualEditor": {
          "code": "console.log(context);\nreturn {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
          "codeHeight": 600,
          "dataset": [],
          "series": []
        }
      },
      "pluginVersion": "6.0.0",
      "targets": [
        {
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "vertamedia-clickhouse-datasource"
          },
          "dateTimeType": "DATETIME",
          "editorMode": "builder",
          "extrapolate": true,
          "format": "table",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT CheckName, count(OK) AS counts\nFROM default.kuberhealthy\nWHERE OK = '1'\nGROUP BY CheckName",
          "rawQuery": "SELECT CheckName, count(OK) AS counts\nFROM default.kuberhealthy\nWHERE OK = '1'\nGROUP BY CheckName",
          "refId": "A",
          "round": "0s",
          "skip_comments": true
        }
      ],
      "title": "Running kuberhealthy checks",
      "type": "volkovlabs-echarts-panel"
    },
    {
      "datasource": {
        "type": "vertamedia-clickhouse-datasource",
        "uid": "vertamedia-clickhouse-datasource"
      },
      "gridPos": {
        "h": 12,
        "w": 18,
        "x": 0,
        "y": 13
      },
      "id": 15,
      "options": {
        "baidu": {
          "callback": "bmapReady",
          "key": ""
        },
        "editor": {
          "format": "auto",
          "height": 600
        },
        "editorMode": "code",
        "gaode": {
          "key": "",
          "plugin": "AMap.Scale,AMap.ToolBar"
        },
        "getOption": "let option; // Initialize the option variable\n\nif (typeof context.panel.data === 'undefined' || !context.panel.data.series || !context.panel.data.series[0] || !context.panel.data.series[0].fields) {\n  // Data is not available or doesn't have the expected structure\n  option = {\n    title: {\n      text: 'Data not available',\n      textStyle: {\n        fontSize: 24,\n        fontWeight: 'bold',\n      },\n      left: 'center',\n      top: 'middle',\n    },\n  };\n} else {\n  // Extract data from your JSON as before\n  const namespaces = context.panel.data.series[0].fields[0].values;\n  const counts = context.panel.data.series[0].fields[1].values;\n\n  // Create a hierarchical structure from the data with a default cluster node\n  const hierarchy = {\n    name: 'CheckName', // Default cluster node\n    children: [],\n  };\n\n  // Create an object to store namespaces and their counts\n  const namespaceCounts = {};\n\n  // Populate the namespaceCounts object with namespaces and counts\n  for (let i = 0; i < namespaces.length; i++) {\n    const namespace = namespaces[i];\n    const count = counts[i];\n\n    if (!namespaceCounts[namespace]) {\n      namespaceCounts[namespace] = count;\n    } else {\n      namespaceCounts[namespace] += count;\n    }\n  }\n\n  // Create nodes for each namespace and add them as children of the default cluster node\n  for (const namespace in namespaceCounts) {\n    hierarchy.children.push({\n      name: namespace,\n      children: [{ name: `${namespaceCounts[namespace]}` }],\n    });\n  }\n\n  // Create the tree chart using ECharts\n  option = {\n    tooltip: {\n      trigger: 'item',\n      triggerOn: 'mousemove',\n      formatter: function (params) {\n        const node = params.data;\n        let tooltip = '';\n        if (node.column) {\n          tooltip += `${node.column}: ${node.name}`;\n        } else {\n          tooltip += node.name;\n        }\n        return tooltip;\n      },\n    },\n    series: [\n      {\n        type: 'tree',\n        data: [hierarchy], // Use the hierarchy object as the data\n        top: '1%',\n        left: '7%',\n        bottom: '1%',\n        right: '20%',\n        symbolSize: 7,\n        label: {\n          position: 'left',\n          verticalAlign: 'middle',\n          align: 'centre',\n          fontSize: 15, // Increase the text size for regular nodes\n          fontWeight: 'bold', // Set the font weight to bold\n        },\n        leaves: {\n          label: {\n            position: 'right',\n            verticalAlign: 'middle',\n            align: 'left',\n            fontSize: 15, // Increase the text size for leaves\n            fontWeight: 'bold', // Set the font weight to bold\n          },\n        },\n        emphasis: {\n          focus: 'descendant',\n        },\n        expandAndCollapse: true,\n        animationDuration: 550,\n        animationDurationUpdate: 750,\n      },\n    ],\n  };\n}\n\nreturn option;\n",
        "google": {
          "callback": "gmapReady",
          "key": ""
        },
        "map": "none",
        "renderer": "canvas",
        "themeEditor": {
          "config": "{}",
          "height": 400,
          "name": "default"
        },
        "visualEditor": {
          "code": "console.log(context);\nreturn {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
          "codeHeight": 600,
          "dataset": [],
          "series": []
        }
      },
      "pluginVersion": "6.0.0",
      "targets": [
        {
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "vertamedia-clickhouse-datasource"
          },
          "dateTimeType": "DATETIME",
          "editorMode": "builder",
          "extrapolate": true,
          "format": "table",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT CheckName, count(OK) AS counts\nFROM default.kuberhealthy\nWHERE OK = '0'\nGROUP BY CheckName",
          "rawQuery": "SELECT CheckName, count(OK) AS counts\nFROM default.kuberhealthy\nWHERE OK = '0'\nGROUP BY CheckName",
          "refId": "A",
          "round": "0s",
          "skip_comments": true
        }
      ],
      "title": " Faliure kuberhealthy checks",
      "type": "volkovlabs-echarts-panel"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "ClickHouse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 25
      },
      "id": 10,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "10.0.3",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "ClickHouse"
          },
          "editorType": "sql",
          "format": 1,
          "meta": {
            "builderOptions": {
              "columns": [],
              "database": "",
              "limit": 1000,
              "mode": "list",
              "queryType": "table",
              "table": ""
            }
          },
          "pluginVersion": "4.0.3",
          "queryType": "table",
          "rawSql": "Select LastRun, OK,Errors\nfrom default.kuberhealthy\nwhere CheckName LIKE '%pod-restarts%' AND $__timeFilter(LastRun)",
          "refId": "A"
        }
      ],
      "title": "Kuberhealthy Pod Restarts Status Over Time",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "ClickHouse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "hue",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 2,
            "pointSize": 10,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "OK"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 25
      },
      "id": 8,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "ClickHouse"
          },
          "editorType": "sql",
          "format": 1,
          "meta": {
            "builderOptions": {
              "columns": [],
              "database": "",
              "limit": 1000,
              "mode": "list",
              "queryType": "table",
              "table": ""
            }
          },
          "pluginVersion": "4.0.3",
          "queryType": "table",
          "rawSql": "Select LastRun, OK\nfrom default.kuberhealthy\nwhere $__timeFilter(LastRun)",
          "refId": "A"
        }
      ],
      "title": "Kuberhealthy Status Over Time",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "ClickHouse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "count()"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 33
      },
      "id": 7,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "ClickHouse"
          },
          "editorType": "sql",
          "format": 1,
          "meta": {
            "builderOptions": {
              "columns": [],
              "database": "",
              "limit": 1000,
              "mode": "list",
              "queryType": "table",
              "table": ""
            }
          },
          "pluginVersion": "4.0.3",
          "queryType": "table",
          "rawSql": "Select LastRun, count(*)\nfrom default.kuberhealthy\nwhere $__timeFilter(LastRun)\nGroup By LastRun",
          "refId": "A"
        }
      ],
      "title": "Kuberhealthy  Counts Over Time.",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "ClickHouse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 33
      },
      "id": 12,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "ClickHouse"
          },
          "editorType": "sql",
          "format": 1,
          "meta": {
            "builderOptions": {
              "columns": [],
              "database": "",
              "limit": 1000,
              "mode": "list",
              "queryType": "table",
              "table": ""
            }
          },
          "pluginVersion": "4.0.3",
          "queryType": "table",
          "rawSql": "Select LastRun, OK,Errors\nfrom default.kuberhealthy\nwhere CheckName LIKE '%image-pull-check%' AND $__timeFilter(LastRun)",
          "refId": "A"
        }
      ],
      "title": "Image Pull Check",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "ClickHouse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 5,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 41
      },
      "id": 13,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "ClickHouse"
          },
          "editorType": "sql",
          "format": 1,
          "meta": {
            "builderOptions": {
              "columns": [],
              "database": "",
              "limit": 1000,
              "mode": "list",
              "queryType": "table",
              "table": ""
            }
          },
          "pluginVersion": "4.0.3",
          "queryType": "table",
          "rawSql": "Select LastRun, OK,Errors\nfrom default.kuberhealthy\nwhere CheckName LIKE '%resource-quota%' AND $__timeFilter(LastRun)",
          "refId": "A"
        }
      ],
      "title": "Resource-quata check",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "ClickHouse"
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "center",
            "cellOptions": {
              "type": "color-text"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 41
      },
      "id": 6,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "10.0.3",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "ClickHouse"
          },
          "editorType": "sql",
          "format": 1,
          "meta": {
            "builderOptions": {
              "columns": [],
              "database": "",
              "limit": 1000,
              "mode": "list",
              "queryType": "table",
              "table": ""
            }
          },
          "pluginVersion": "4.0.3",
          "queryType": "table",
          "rawSql": "Select LastRun, OK,Errors\nfrom default.kuberhealthy\nwhere $__timeFilter(LastRun) AND OK='0'\nOrder BY LastRun DESC",
          "refId": "A"
        }
      ],
      "title": "Kuberhealthy Errors Over Time",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "ClickHouse"
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "center",
            "cellOptions": {
              "type": "color-text"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 49
      },
      "id": 3,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "10.0.3",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "ClickHouse"
          },
          "editorType": "sql",
          "format": 1,
          "meta": {
            "builderOptions": {
              "columns": [],
              "database": "",
              "limit": 1000,
              "mode": "list",
              "queryType": "table",
              "table": ""
            }
          },
          "pluginVersion": "4.0.3",
          "queryType": "table",
          "rawSql": "SELECT * FROM \"default\".\"kuberhealthy\"\nWhere $__timeFilter(LastRun)\nOrder By LastRun DESC \n\n",
          "refId": "A"
        }
      ],
      "title": "Kuberhealthy Tables",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "ClickHouse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 57
      },
      "id": 16,
      "options": {
        "displayMode": "gradient",
        "minVizHeight": 10,
        "minVizWidth": 0,
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [],
          "fields": "",
          "values": true
        },
        "showUnfilled": true,
        "valueMode": "color"
      },
      "pluginVersion": "10.0.3",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "ClickHouse"
          },
          "editorType": "sql",
          "format": 1,
          "meta": {
            "builderOptions": {
              "columns": [],
              "database": "",
              "limit": 1000,
              "mode": "list",
              "queryType": "table",
              "table": ""
            }
          },
          "pluginVersion": "4.0.3",
          "queryType": "table",
          "rawSql": "SELECT CheckName, count(OK) AS counts\nFROM default.kuberhealthy\nWHERE OK = '1'\nGROUP BY CheckName",
          "refId": "A"
        }
      ],
      "title": "Success Kuberhealthy Checks",
      "type": "bargauge"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "ClickHouse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 11,
        "x": 12,
        "y": 57
      },
      "id": 2,
      "options": {
        "displayMode": "gradient",
        "minVizHeight": 10,
        "minVizWidth": 0,
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [],
          "fields": "",
          "values": true
        },
        "showUnfilled": true,
        "valueMode": "color"
      },
      "pluginVersion": "10.0.3",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "ClickHouse"
          },
          "editorType": "sql",
          "format": 1,
          "meta": {
            "builderOptions": {
              "columns": [],
              "database": "",
              "limit": 1000,
              "mode": "list",
              "queryType": "table",
              "table": ""
            }
          },
          "pluginVersion": "4.0.3",
          "queryType": "table",
          "rawSql": "SELECT CheckName, count(OK) AS counts\nFROM default.kuberhealthy\nWHERE OK = '0'\nGROUP BY CheckName",
          "refId": "A"
        }
      ],
      "title": "Faliure Kuberhealthy Checks",
      "type": "bargauge"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "ClickHouse"
      },
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "orange",
                "value": 70
              },
              {
                "color": "red",
                "value": 85
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 65
      },
      "id": 4,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "10.0.3",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "ClickHouse"
          },
          "editorType": "sql",
          "format": 1,
          "meta": {
            "builderOptions": {
              "columns": [],
              "database": "",
              "limit": 1000,
              "mode": "list",
              "queryType": "table",
              "table": ""
            }
          },
          "pluginVersion": "4.0.3",
          "queryType": "table",
          "rawSql": "SELECT count(OK)\nFROM default.kuberhealthy\nWHERE OK = '1'",
          "refId": "A"
        }
      ],
      "title": "Total count Kuberhealthy Running",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "ClickHouse"
      },
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "orange",
                "value": 70
              },
              {
                "color": "red",
                "value": 85
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 65
      },
      "id": 5,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "10.0.3",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "ClickHouse"
          },
          "editorType": "sql",
          "format": 1,
          "meta": {
            "builderOptions": {
              "columns": [],
              "database": "",
              "limit": 1000,
              "mode": "list",
              "queryType": "table",
              "table": ""
            }
          },
          "pluginVersion": "4.0.3",
          "queryType": "table",
          "rawSql": "SELECT count(OK)\nFROM default.kuberhealthy\nWHERE OK = '0'",
          "refId": "A"
        }
      ],
      "title": "Total Count Kuberhealthy Faliures",
      "type": "gauge"
    }
  ],
  "refresh": "",
  "schemaVersion": 38,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-24h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "KuberHealth",
  "uid": "d946c53c-8b1d-4e3c-9154-4219165342",
  "version": 2,
  "weekStart": ""
}